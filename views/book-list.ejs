<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Book List</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      color: #333;
    }

    /* Header */
    header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 1rem 2rem;
      background-color: #fff;
      border-bottom: 1px solid #ddd;
    }

    .logo a {
      text-decoration: none;
      font-size: 1.5rem;
      font-weight: bold;
      color: #ff4e4e;
    }

    nav {
      display: flex;
      align-items: center;
    }

    nav ul {
      display: flex;
      list-style: none;
      margin-right: 2rem;
    }

    nav ul li {
      margin-left: 1.5rem;
    }

    nav ul li a {
      text-decoration: none;
      color: #333;
      font-size: 1rem;
      transition: color 0.3s;
    }

    nav ul li a:hover {
      color: #ff4e4e;
    }

    .user-info {
      display: flex;
      align-items: center;
    }

    .user-info img {
      width: 40px;
      height: 40px;
      border-radius: 50%;
      margin-right: 0.5rem;
    }

    .user-info span {
      font-size: 1rem;
      font-weight: 500;
      color: #333;
    }

    /* book list */
    .book-info {
      padding: 2rem;
    }

    .book-list {
      display: flex;
      flex-direction: column;
      gap: 1rem;
    }

    .book-item {
      display: flex;
      align-items: flex-start;
      justify-content: space-between;
      padding: 1rem;
      border: 1px solid #ddd;
      border-radius: 4px;
      background-color: #f9f9f9;
    }

    .book-item img {
      width: 80px;
      height: 100px;
      object-fit: cover;
      margin-right: 1rem;
      border: 1px solid #ccc;
    }

    .book-details {
      flex: 1;
      margin-right: 1rem;
    }

    .book-details h3 {
      margin-bottom: 0.5rem;
      font-size: 1.2rem;
    }

    .book-details p {
      margin: 0.3rem 0;
      font-size: 0.9rem;
      color: #555;
    }

    .book-actions {
      display: flex;
      flex-direction: column;
      gap: 0.5rem;
    }

    .book-actions button {
      padding: 0.5rem 1rem;
      border: none;
      border-radius: 4px;
      cursor: pointer;
      font-size: 0.9rem;
      color: #fff;
    }

    .book-actions .edit-btn {
      background-color: #4caf50;
    }

    .book-actions .delete-btn {
      background-color: #f44336;
    }

    .book-actions button:hover {
      opacity: 0.9;
    }

    .main-info {
      text-align: center;
      padding: 4rem 2rem;
      background-color: #f9f9f9;
      height: 80vh;
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
    }

    .main-info h1 {
      font-size: 2.5rem;
      margin-bottom: 1rem;
    }

    .main-info p {
      font-size: 1.2rem;
      margin-bottom: 2rem;
    }

    .search-bar {
      display: flex;
      width: 100%;
      max-width: 600px;
    }

    .search-bar input {
      flex: 1;
      padding: 0.8rem;
      border: 1px solid #ddd;
      border-right: none;
      border-radius: 4px 0 0 4px;
    }

    .search-bar button {
      padding: 0.8rem 1.5rem;
      border: none;
      background-color: #ff4e4e;
      color: #fff;
      font-size: 1rem;
      border-radius: 0 4px 4px 0;
      cursor: pointer;
      transition: background-color 0.3s;
    }

    .search-bar button:hover {
      background-color: #e04343;
    }

    /* Footer */
    footer {
      text-align: center;
      padding: 1rem;
      background-color: #fff;
      border-top: 1px solid #ddd;
      font-size: 0.9rem;
      color: #666;
    }

    /* Global Styles */
    body {
      font-family: Arial, sans-serif;
    }

    /* Modal Styling */
    .modal {
      display: none;
      /* Hidden by default */
      position: fixed;
      z-index: 1;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      overflow: auto;
      background-color: rgba(0, 0, 0, 0.5);
      padding-top: 60px;
    }

    .modal-content {
      background-color: #fff;
      margin: 5% auto;
      padding: 20px;
      border: 1px solid #ddd;
      width: 50%;
      border-radius: 8px;
    }

    .close-btn {
      color: #aaa;
      float: right;
      font-size: 28px;
      font-weight: bold;
      cursor: pointer;
    }

    .close-btn:hover {
      color: #000;
    }

    form label {
      display: block;
      margin-top: 10px;
      font-weight: bold;
    }

    form input,
    form textarea {
      width: 100%;
      padding: 8px;
      margin-top: 5px;
      margin-bottom: 15px;
      border: 1px solid #ddd;
      border-radius: 4px;
    }

    form button {
      padding: 10px 15px;
      border: none;
      background-color: #4caf50;
      color: white;
      border-radius: 4px;
      cursor: pointer;
    }

    form button:hover {
      background-color: #45a049;
    }

    #current-image {
      display: block;
      width: 120px;
      height: 150px;
      margin-bottom: 1rem;
      border: 1px solid #ddd;
      border-radius: 4px;
      object-fit: cover;
    }

    #new-image {
      margin-bottom: 1rem;
    }
  </style>
</head>

<body>

  <script>
    async function handleLogout() {
      try {
        const response = await fetch('/api/auth/logout', {
          method: 'POST',
          credentials: 'include'
        });
        if (response.ok) {
          window.location.href = '/login';
        } else {
          const result = await response.json();
          alert(result.message);
        }
      } catch (error) {
        console.error('Error:', error);
        alert('An error occurred during logout. Please try again.');
      }
    }
  </script>
  <!-- Header -->
  <header>
    <div class="logo">
      <a href="main">MLibrary</a>
    </div>
    <nav>
      <!-- User Info -->
      <div class="user-info">
        <span>
          User:
          <%= user.username %>
        </span>
      </div>
      <ul>
        <li><a href="book-list">Book List</a></li>
        <li><a href="add-book">Add Book</a></li>
        <% if (show){ %>
          <li><a href="management-user">User Management</a></li>
          <li><a href="add-user">Add User</a></li>
          <%}%>
            <li><a href="#" onclick="handleLogout()">Logout</a></li>
      </ul>

    </nav>
  </header>

  <!-- Main Content -->
  <main>
    <h1>Book List</h1>
    <div class="book-list">
      <!-- Book Item -->
      <% books.forEach(function(book) { %>
        <div class="book-item" data-id="<%= book._id %>" data-title="<%= book.title %>" data-author="<%= book.author %>"
          data-release="<%= book.date.split('T')[0] %>" data-stock="<%= book.stock %>"
          data-description="<%= book.Description %>">
          <img src="/bookImg/<%= book._id %>" alt="Book Cover"
            onerror="this.onerror=null; this.src='images/bookcover.jpg';">
          <div class="book-details">
            <h3>
              <%= book.title %>
            </h3>
            <p><strong>Author:</strong>
              <%= book.author %>
            </p>
            <p><strong>Release Date:</strong>
              <%= book.date.split('T')[0] %>
            </p>
            <p><strong>Stock:</strong>
              <%= book.stock %>
            </p>
            <p><strong>Description:</strong>
              <%= book.Description %>
            </p>
          </div>
          <div class="book-actions">
            <button class="edit-btn" onclick="openEditModal(this)">Edit</button>
            <button class="delete-btn" onclick="deleteBook(this)">Delete</button>
          </div>
        </div>
        <% }); %>
    </div>
  </main>

  <!-- Edit Modal -->
  <div id="edit-modal" class="modal">

    <div class="modal-content">
      <span class="close-btn" onclick="closeEditModal()">&times;</span>
      <h2>Edit Book</h2>
      <form id="edit-form" action="" method="PUT" enctype="multipart/form-data">
        <!-- Current Image Display -->
        <label for="current-image">Current Image:</label>
        <div>
          <img id="current-image" src="#" alt="Current Book Cover"
            style="width: 120px; height: 150px; margin-bottom: 1rem; border: 1px solid #ddd; object-fit: cover;">
        </div>

        <!-- Upload New Image -->
        <label for="image">Upload New Image:</label>
        <input type="file" id="image" name="image" accept="image/*" onchange="previewNewImage(event)">

        <label for="title">Title:</label>
        <input type="text" id="title" name="title" required>

        <label for="author">Author:</label>
        <input type="text" id="author" name="author" required>

        <label for="release">Release Date:</label>
        <input type="date" id="release" name="release" required>

        <label for="stock">Stock:</label>
        <input type="number" id="stock" name="stock" required>

        <label for="description">Description:</label>
        <textarea id="Description" name="Description" required></textarea>

        <button type="submit">Save Changes</button>
        <input type="hidden" id="id" name="id">
      </form>
    </div>
  </div>


  <script>
    // Open the modal and populate it with book data
    function openEditModal(button) {
      const modal = document.getElementById('edit-modal');
      const form = document.getElementById('edit-form');
      const bookItem = button.closest('.book-item');

      // Get book data from data attributes
      const title = bookItem.dataset.title;
      const author = bookItem.dataset.author;
      const release = bookItem.dataset.release;
      const stock = bookItem.dataset.stock;
      const description = bookItem.dataset.description;
      const id = bookItem.dataset.id;
      const image = document.getElementById('current-image');

      const releasedate = new Date(release);
      const formattedDate = releasedate.toISOString().split('T')[0];
      console.log(formattedDate);

      // Populate the form with book data
      form.title.value = title;
      form.author.value = author;
      form.release.value = formattedDate;
      form.stock.value = stock;
      form.Description.value = description;
      form.id.value = id;
      image.src = "/bookImg/" + id;

      // Show the modal
      modal.style.display = 'block';
    }

    async function deleteBook(button) {
      const bookItem = button.closest('.book-item');
      const bookId = bookItem.dataset.id;
      const title = bookItem.dataset.title;
      if (confirm(`Are you sure you want to delete "${title}"?`)) {
        try {
          const response = await fetch(`/api/book/delete/${bookId}`, {
            method: 'DELETE',
            headers: {
              'Content-Type': 'application/json',
            },
          });
          if (response.ok) {
            bookItem.remove();
            alert(`${title} has been deleted successfully.`);
          } else {
            alert('Failed to delete the book. Please try again.');
          }
        } catch (error) {
          console.error('Error deleting book:', error);
          alert('An error occurred while deleting the book.');
        }
      }
    }

    // Close the modal
    function closeEditModal() {
      const modal = document.getElementById('edit-modal');
      modal.style.display = 'none';
    }

    document.getElementById('edit-form').addEventListener('submit', async function (event) {
      event.preventDefault();
      const formData = new FormData(this);
      const id = this.querySelector('#id').value;
      try {
        const response = await fetch(`api/book/edit/${id}`, {
          method: 'PUT',
          body: formData,
        });
        console.log(response);
        if (response.ok) {
          location.reload();
        } else {
          const errorData = await response.json();
          alert(`Error: ${errorData.message || 'An error occurred'}`);
        }
      } catch (error) {
        console.error('Error:', error);
        alert('An unexpected error occurred. Please try again.');
      }
    });
  </script>
</body>

</html>